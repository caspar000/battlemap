{"ast":null,"code":"var _jsxFileName = \"/home/vanir/Desktop/git/battlemaximus/src/contexts/MapContext.js\";\nimport React, { createContext, Component } from 'react';\nexport const MapContext = createContext();\n\nclass MapContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lines: [],\n      brush: 'none',\n      brushColor: '#333333',\n      gridSize: 40,\n      gridColor: '#aaaaaa',\n      player: 0,\n      playerColor: '#325286',\n      enemyColor: '#660000',\n      goblin: 0,\n      ogre: 0,\n      orc: 0,\n      bandit: 0,\n      cultist: 0,\n      skeleton: 0,\n      sidebar: 'none'\n    };\n\n    this.handleFormChange = e => {\n      if (e.target.type === 'number') {\n        this.setState({\n          [e.target.id]: Number(e.target.value)\n        });\n      } else {\n        this.setState({\n          [e.target.id]: e.target.value\n        });\n      }\n    };\n\n    this.toggleSidebar = () => {\n      if (this.state.sidebar !== 'display') {\n        this.setState({\n          sidebar: 'display'\n        });\n      } else {\n        this.setState({\n          sidebar: 'none'\n        });\n      }\n    };\n\n    this.increaseByTen = e => {\n      e.preventDefault();\n      const gridSize = this.state.gridSize + 10;\n      this.setState({\n        gridSize\n      });\n    };\n\n    this.decreaseByTen = e => {\n      e.preventDefault();\n\n      if (this.state.gridSize - 10 <= 0) {} else {\n        const gridSize = this.state.gridSize - 10;\n        this.setState({\n          gridSize\n        });\n      }\n    };\n\n    this.toggleMove = () => {\n      this.setState({\n        brush: 'none'\n      });\n    };\n\n    this.toggleBrush = () => {\n      this.setState({\n        brush: 'brush'\n      });\n    };\n\n    this.toggleEraser = () => {\n      this.setState({\n        brush: 'eraser'\n      });\n    };\n\n    this.spawnPlayer = () => {\n      const player = this.state.player + 1;\n      this.setState({\n        player\n      });\n    };\n\n    this.spawnGoblin = () => {\n      const goblin = this.state.goblin + 1;\n      this.setState({\n        goblin\n      });\n    };\n\n    this.spawnOrc = () => {\n      const orc = this.state.orc + 1;\n      this.setState({\n        orc\n      });\n    };\n\n    this.spawnOgre = () => {\n      const ogre = this.state.ogre + 1;\n      this.setState({\n        ogre\n      });\n    };\n\n    this.spawnBandit = () => {\n      const bandit = this.state.bandit + 1;\n      this.setState({\n        bandit\n      });\n    };\n\n    this.spawnSkeleton = () => {\n      const skeleton = this.state.skeleton + 1;\n      this.setState({\n        skeleton\n      });\n    };\n\n    this.spawnCultist = () => {\n      const cultist = this.state.cultist + 1;\n      this.setState({\n        cultist\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MapContext.Provider, {\n      value: { ...this.state,\n        toggleSidebar: this.toggleSidebar,\n        plusTen: this.increaseByTen,\n        minusTen: this.decreaseByTen,\n        formChange: this.handleFormChange,\n        toggleMove: this.toggleMove,\n        toggleBrush: this.toggleBrush,\n        toggleEraser: this.toggleEraser,\n        spawnPlayer: this.spawnPlayer,\n        spawnGoblin: this.spawnGoblin,\n        spawnOrc: this.spawnOrc,\n        spawnOgre: this.spawnOgre,\n        spawnBandit: this.spawnBandit,\n        spawnSkeleton: this.spawnSkeleton,\n        spawnCultist: this.spawnCultist\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default MapContextProvider;","map":{"version":3,"sources":["/home/vanir/Desktop/git/battlemaximus/src/contexts/MapContext.js"],"names":["React","createContext","Component","MapContext","MapContextProvider","state","lines","brush","brushColor","gridSize","gridColor","player","playerColor","enemyColor","goblin","ogre","orc","bandit","cultist","skeleton","sidebar","handleFormChange","e","target","type","setState","id","Number","value","toggleSidebar","increaseByTen","preventDefault","decreaseByTen","toggleMove","toggleBrush","toggleEraser","spawnPlayer","spawnGoblin","spawnOrc","spawnOgre","spawnBandit","spawnSkeleton","spawnCultist","render","plusTen","minusTen","formChange","props","children"],"mappings":"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","sourcesContent":["import React, {createContext, Component} from 'react'\r\n\r\nexport const MapContext = createContext()\r\n\r\nclass MapContextProvider extends Component {\r\n  state = {\r\n    lines: [],\r\n    brush: 'none',\r\n    brushColor: '#333333',\r\n\r\n    gridSize: 40,\r\n    gridColor: '#aaaaaa',\r\n\r\n    player: 0,\r\n    playerColor: '#325286',\r\n\r\n    enemyColor: '#660000',\r\n\r\n    goblin: 0,\r\n    ogre: 0,\r\n    orc: 0,\r\n\r\n    bandit: 0,\r\n    cultist: 0,\r\n    skeleton: 0,\r\n\r\n    sidebar: 'none',\r\n  }\r\n\r\n  handleFormChange = e => {\r\n    if (e.target.type === 'number'){\r\n      this.setState({\r\n        [e.target.id]: Number(e.target.value)\r\n      })\r\n    } else {\r\n      this.setState({\r\n        [e.target.id]: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleSidebar = () => {\r\n    if (this.state.sidebar !== 'display'){\r\n      this.setState({sidebar: 'display'})\r\n    } else {\r\n      this.setState({sidebar: 'none'})\r\n    }\r\n  }\r\n\r\n  increaseByTen = e => {\r\n    e.preventDefault()\r\n    const gridSize = this.state.gridSize + 10\r\n    this.setState({\r\n      gridSize\r\n    })\r\n  }\r\n  decreaseByTen = e => {\r\n    e.preventDefault()\r\n    if (this.state.gridSize - 10 <= 0) {\r\n\r\n    } else {\r\n      const gridSize = this.state.gridSize - 10\r\n      this.setState({\r\n        gridSize\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleMove = () => {\r\n    this.setState({\r\n      brush: 'none'\r\n    })\r\n  }\r\n  toggleBrush = () => {\r\n    this.setState({\r\n      brush: 'brush'\r\n    })\r\n  }\r\n  toggleEraser = () => {\r\n    this.setState({\r\n      brush: 'eraser'\r\n    })\r\n  }\r\n\r\n  spawnPlayer = () => {\r\n    const player = this.state.player + 1\r\n    this.setState({\r\n      player \r\n    })\r\n  }\r\n  spawnGoblin = () => {\r\n    const goblin = this.state.goblin + 1\r\n    this.setState({\r\n      goblin\r\n    })\r\n  }\r\n  spawnOrc = () => {\r\n    const orc = this.state.orc + 1\r\n    this.setState({\r\n      orc\r\n    })\r\n  }\r\n  spawnOgre = () => {\r\n    const ogre = this.state.ogre + 1\r\n    this.setState({\r\n      ogre\r\n    })\r\n  }\r\n  spawnBandit = () => {\r\n    const bandit = this.state.bandit + 1\r\n    this.setState({\r\n      bandit\r\n    })\r\n  }\r\n  spawnSkeleton = () => {\r\n    const skeleton = this.state.skeleton + 1\r\n    this.setState({\r\n      skeleton\r\n    })\r\n  }\r\n  spawnCultist = () => {\r\n    const cultist = this.state.cultist + 1\r\n    this.setState({\r\n      cultist\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <MapContext.Provider value={{...this.state, \r\n        toggleSidebar: this.toggleSidebar, \r\n        plusTen: this.increaseByTen, minusTen: this.decreaseByTen, \r\n        formChange: this.handleFormChange, \r\n        toggleMove: this.toggleMove, \r\n        toggleBrush: this.toggleBrush, \r\n        toggleEraser: this.toggleEraser,\r\n        spawnPlayer: this.spawnPlayer,\r\n        spawnGoblin: this.spawnGoblin,\r\n        spawnOrc: this.spawnOrc,\r\n        spawnOgre: this.spawnOgre,\r\n        spawnBandit: this.spawnBandit,\r\n        spawnSkeleton: this.spawnSkeleton,\r\n        spawnCultist: this.spawnCultist,\r\n        }}>\r\n        {this.props.children}\r\n      </MapContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapContextProvider"]},"metadata":{},"sourceType":"module"}